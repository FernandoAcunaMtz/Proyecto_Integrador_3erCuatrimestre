const axios = require('axios');

// Configuraci√≥n
const SERVER_URL = 'http://localhost:5501';
const CHATBOT_URL = 'http://localhost:5502';

// Funci√≥n para verificar servidor
async function verificarServidor(url, nombre) {
    try {
        const response = await axios.get(url, { timeout: 5000 });
        return { success: true, status: response.status };
    } catch (error) {
        return { success: false, error: error.message };
    }
}

// Funci√≥n para probar diferentes tipos de mensajes
async function probarMensajes() {
    const tests = [
        {
            name: "Saludo b√°sico",
            message: "Hola",
            expected: "saludo"
        },
        {
            name: "Consulta sobre cursos",
            message: "¬øQu√© cursos tienen disponibles?",
            expected: "cursos"
        },
        {
            name: "Consulta sobre registro",
            message: "¬øC√≥mo me registro?",
            expected: "registro"
        },
        {
            name: "Consulta sobre contacto",
            message: "¬øD√≥nde puedo contactarlos?",
            expected: "contacto"
        }
    ];

    console.log('\nüß™ Probando diferentes tipos de mensajes...\n');
    
    for (const test of tests) {
        try {
            const response = await axios.post(`${SERVER_URL}/chatbot/chat`, {
                message: test.message,
                currentPage: "/index.html",
                userRole: "guest",
                chatHistory: []
            }, {
                headers: { 'Content-Type': 'application/json' },
                timeout: 5000
            });
            
            console.log(`‚úÖ ${test.name}:`);
            console.log(`   Mensaje: "${test.message}"`);
            console.log(`   Respuesta: ${response.data.response.substring(0, 80)}...`);
            console.log('');
            
        } catch (error) {
            console.log(`‚ùå ${test.name}: Error - ${error.message}`);
        }
    }
}

// Funci√≥n para probar diferentes roles de usuario
async function probarRoles() {
    const roles = ['guest', 'estudiante', 'profesor', 'admin'];
    
    console.log('\nüë• Probando diferentes roles de usuario...\n');
    
    for (const role of roles) {
        try {
            const response = await axios.post(`${SERVER_URL}/chatbot/chat`, {
                message: "Hola",
                currentPage: "/index.html",
                userRole: role,
                chatHistory: []
            }, {
                headers: { 'Content-Type': 'application/json' },
                timeout: 5000
            });
            
            console.log(`‚úÖ Rol ${role}:`);
            console.log(`   Respuesta: ${response.data.response.substring(0, 80)}...`);
            console.log('');
            
        } catch (error) {
            console.log(`‚ùå Rol ${role}: Error - ${error.message}`);
        }
    }
}

// Funci√≥n para probar diferentes p√°ginas
async function probarPaginas() {
    const paginas = [
        { path: "/index.html", name: "P√°gina principal" },
        { path: "/html/cursos-venta.html", name: "P√°gina de cursos" },
        { path: "/html/blog.html", name: "Blog" },
        { path: "/html/contact.html", name: "Contacto" }
    ];
    
    console.log('\nüìÑ Probando contexto por p√°gina...\n');
    
    for (const pagina of paginas) {
        try {
            const response = await axios.post(`${SERVER_URL}/chatbot/chat`, {
                message: "¬øQu√© puedo hacer aqu√≠?",
                currentPage: pagina.path,
                userRole: "guest",
                chatHistory: []
            }, {
                headers: { 'Content-Type': 'application/json' },
                timeout: 5000
            });
            
            console.log(`‚úÖ ${pagina.name}:`);
            console.log(`   P√°gina: ${pagina.path}`);
            console.log(`   Respuesta: ${response.data.response.substring(0, 80)}...`);
            console.log('');
            
        } catch (error) {
            console.log(`‚ùå ${pagina.name}: Error - ${error.message}`);
        }
    }
}

// Funci√≥n principal
async function verificarChatbotCompleto() {
    console.log('üöÄ VERIFICACI√ìN COMPLETA DEL CHATBOT');
    console.log('=====================================\n');
    
    // Verificar servidores
    console.log('üîç Verificando servidores...');
    const servidorPrincipal = await verificarServidor(SERVER_URL, 'Servidor Principal');
    const servidorChatbot = await verificarServidor(CHATBOT_URL, 'Servidor Chatbot');
    
    if (servidorPrincipal.success) {
        console.log(`‚úÖ Servidor Principal (${SERVER_URL}): Funcionando (Status: ${servidorPrincipal.status})`);
    } else {
        console.log(`‚ùå Servidor Principal: ${servidorPrincipal.error}`);
    }
    
    if (servidorChatbot.success) {
        console.log(`‚úÖ Servidor Chatbot (${CHATBOT_URL}): Funcionando (Status: ${servidorChatbot.status})`);
    } else {
        console.log(`‚ùå Servidor Chatbot: ${servidorChatbot.error}`);
    }
    
    // Probar funcionalidad b√°sica
    if (servidorPrincipal.success) {
        await probarMensajes();
        await probarRoles();
        await probarPaginas();
    }
    
    // Resumen final
    console.log('üìä RESUMEN FINAL:');
    console.log('==================');
    console.log(`Servidor Principal: ${servidorPrincipal.success ? '‚úÖ Funcionando' : '‚ùå No disponible'}`);
    console.log(`Servidor Chatbot: ${servidorChatbot.success ? '‚úÖ Funcionando' : '‚ùå No disponible'}`);
    
    if (servidorPrincipal.success) {
        console.log('\nüéâ ¬°El chatbot est√° completamente operativo!');
        console.log('   Puedes usarlo desde tu aplicaci√≥n web.');
    } else {
        console.log('\nüö® El chatbot no est√° funcionando correctamente.');
        console.log('   Verifica que los servidores est√©n ejecut√°ndose.');
    }
}

// Ejecutar verificaci√≥n
verificarChatbotCompleto().catch(console.error);
